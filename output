;author ZZQ
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
declare i32 @printf(i8*, ...)
declare i32 @__isoc99_scanf(i8*, ...)
%struct.ss2 = type {i32,i32}
%struct.ss1 = type {i32,i32,%struct.ss2}
@A = common global %struct.ss1 zeroinitializer, align 4
define i32 @main() {
entry:
%a = alloca i32, align 4
%tmp_4 = getelementptr inbounds %struct.ss1* @A, i32 0, i32 2
%tmp_2 = getelementptr inbounds %struct.ss2* %tmp_4, i32 0, i32 0
store i32 1, i32* %tmp_2, align 4
%tmp_9 = getelementptr inbounds %struct.ss1* @A, i32 0, i32 2
%tmp_10 = getelementptr inbounds %struct.ss2* %tmp_9, i32 0, i32 0
%tmp_7 = load i32* %tmp_10, align 4
store i32 %tmp_7, i32* %a, align 4
%tmp_11 = load i32* %a, align 4
%call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i32  %tmp_11)
ret i32 0
}
